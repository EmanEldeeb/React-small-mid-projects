{"ast":null,"code":"import { type } from \"@testing-library/user-event/dist/type\";\nconst initialaccountstate = {\n  balance: 0,\n  loan: 0,\n  loanpurpose: \"\",\n  currency: \"USD\"\n};\nexport default function accountReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialaccountstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"account/deposite\":\n      return {\n        ...state,\n        balance: state.balance + action.payload.amount\n      };\n    case \"account/withdraw\":\n      return {\n        ...state,\n        balance: state.balance - action.payload\n      };\n    case \"account/getLoan\":\n      return {\n        ...state,\n        balance: state.balance + action.payload.amount,\n        loan: state.loan + action.payload.amount,\n        loanpurpose: action.payload.purpose\n      };\n    case \"account/payLoanback\":\n      return {\n        ...state,\n        balance: state.balance - state.loan,\n        loan: 0,\n        loanpurpose: \"\"\n      };\n    default:\n      return state;\n  }\n}\nexport function actionAccountDeposite(amount, currency) {\n  if (currency === \"USD\") return {\n    type: \"account/deposite\",\n    payload: {\n      amount,\n      currency\n    }\n  };else return async function (dispatch, getstate) {\n    const res = await fetch(`https://api.frankfurter.app/latest?amount=${amount}&from=${currency}&to=USD`);\n    const data = await res.json();\n    dispatch({\n      type: \"account/deposite\",\n      payload: {\n        amount: data,\n        currency\n      }\n    });\n  };\n}\nexport function actionAccountWithdraw(amount) {\n  return {\n    type: \"account/withdraw\",\n    payload: amount\n  };\n}\nexport function actionAccountRequestloan(amount, purpose) {\n  return {\n    type: \"account/getLoan\",\n    payload: {\n      amount,\n      purpose\n    }\n  };\n}\nexport function actionPayLoan() {\n  return {\n    type: \"account/payLoanback\"\n  };\n}","map":{"version":3,"names":["type","initialaccountstate","balance","loan","loanpurpose","currency","accountReducer","state","arguments","length","undefined","action","payload","amount","purpose","actionAccountDeposite","dispatch","getstate","res","fetch","data","json","actionAccountWithdraw","actionAccountRequestloan","actionPayLoan"],"sources":["D:/jonas/[FreeCoursesOnline.Me] The Ultimate React Course 2024 React Redux More/20 - Redux and Modern Redux Toolkit With Thunks/MYCODE/starter/src/features/account/AccountSlice.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\r\n\r\nconst initialaccountstate = {\r\n  balance: 0,\r\n  loan: 0,\r\n  loanpurpose: \"\",\r\n  currency: \"USD\",\r\n};\r\n\r\nexport default function accountReducer(state = initialaccountstate, action) {\r\n  switch (action.type) {\r\n    case \"account/deposite\":\r\n      return { ...state, balance: state.balance + action.payload.amount };\r\n    case \"account/withdraw\":\r\n      return { ...state, balance: state.balance - action.payload };\r\n    case \"account/getLoan\":\r\n      return {\r\n        ...state,\r\n        balance: state.balance + action.payload.amount,\r\n        loan: state.loan + action.payload.amount,\r\n        loanpurpose: action.payload.purpose,\r\n      };\r\n    case \"account/payLoanback\":\r\n      return {\r\n        ...state,\r\n        balance: state.balance - state.loan,\r\n        loan: 0,\r\n        loanpurpose: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function actionAccountDeposite(amount, currency) {\r\n  if (currency === \"USD\")\r\n    return { type: \"account/deposite\", payload: { amount, currency } };\r\n  else\r\n    return async function (dispatch, getstate) {\r\n      const res = await fetch(\r\n        `https://api.frankfurter.app/latest?amount=${amount}&from=${currency}&to=USD`\r\n      );\r\n      const data = await res.json();\r\n      dispatch({\r\n        type: \"account/deposite\",\r\n        payload: { amount: data, currency },\r\n      });\r\n    };\r\n}\r\nexport function actionAccountWithdraw(amount) {\r\n  return { type: \"account/withdraw\", payload: amount };\r\n}\r\nexport function actionAccountRequestloan(amount, purpose) {\r\n  return { type: \"account/getLoan\", payload: { amount, purpose } };\r\n}\r\n\r\nexport function actionPayLoan() {\r\n  return { type: \"account/payLoanback\" };\r\n}\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAE5D,MAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAe,SAASC,cAAcA,CAAA,EAAsC;EAAA,IAArCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,mBAAmB;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxE,QAAQC,MAAM,CAACX,IAAI;IACjB,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGO,KAAK;QAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACC;MAAO,CAAC;IACrE,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGN,KAAK;QAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGS,MAAM,CAACC;MAAQ,CAAC;IAC9D,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGL,KAAK;QACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACC,MAAM;QAC9CV,IAAI,EAAEI,KAAK,CAACJ,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAACC,MAAM;QACxCT,WAAW,EAAEO,MAAM,CAACC,OAAO,CAACE;MAC9B,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGP,KAAK;QACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACJ,IAAI;QACnCA,IAAI,EAAE,CAAC;QACPC,WAAW,EAAE;MACf,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEnB;AAEA,OAAO,SAASQ,qBAAqBA,CAACF,MAAM,EAAER,QAAQ,EAAE;EACtD,IAAIA,QAAQ,KAAK,KAAK,EACpB,OAAO;IAAEL,IAAI,EAAE,kBAAkB;IAAEY,OAAO,EAAE;MAAEC,MAAM;MAAER;IAAS;EAAE,CAAC,CAAC,KAEnE,OAAO,gBAAgBW,QAAQ,EAAEC,QAAQ,EAAE;IACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,6CAA4CN,MAAO,SAAQR,QAAS,SAAQ,CAC9E;IACD,MAAMe,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC7BL,QAAQ,CAAC;MACPhB,IAAI,EAAE,kBAAkB;MACxBY,OAAO,EAAE;QAAEC,MAAM,EAAEO,IAAI;QAAEf;MAAS;IACpC,CAAC,CAAC;EACJ,CAAC;AACL;AACA,OAAO,SAASiB,qBAAqBA,CAACT,MAAM,EAAE;EAC5C,OAAO;IAAEb,IAAI,EAAE,kBAAkB;IAAEY,OAAO,EAAEC;EAAO,CAAC;AACtD;AACA,OAAO,SAASU,wBAAwBA,CAACV,MAAM,EAAEC,OAAO,EAAE;EACxD,OAAO;IAAEd,IAAI,EAAE,iBAAiB;IAAEY,OAAO,EAAE;MAAEC,MAAM;MAAEC;IAAQ;EAAE,CAAC;AAClE;AAEA,OAAO,SAASU,aAAaA,CAAA,EAAG;EAC9B,OAAO;IAAExB,IAAI,EAAE;EAAsB,CAAC;AACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}